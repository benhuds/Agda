{- Name: Bowornmet (Ben) Hudson

--Preorders in Agda!--

-}

open import Preliminaries

module Preorder where

  {- definition: a Preorder is a binary relation that
     is reflexive and transitive. We will represent this
     as a record in Agda.
  -}
  record Preorder (A : Set) : Set1 where
    field
      _≤_ : A → A → Set
      refl : ∀ x → x ≤ x
      trans : ∀ x y z → x ≤ y → y ≤ z → x ≤ z

------------------------------------------

  -- Task 1: Show that Nat≤ is a preorder

  _≤nat_ : Nat -> Nat -> Set
  x ≤nat y = {!!}

  -- proof that Nat is reflexive under ≤
  nat-refl : ∀ (x : Nat) → x ≤nat x
  nat-refl Z = Refl
  nat-refl (S x) = Refl

  -- proof that Nat is transitive under ≤
  nat-trans : ∀ (x y z : Nat) → x ≤nat y → y ≤nat z → x ≤nat z
  nat-trans x y z = {!!}

  -- proof that Nat≤ is a preorder
  Nat≤-ispreorder : Preorder Nat
  Nat≤-ispreorder = record { _≤_ = _≤nat_; refl = nat-refl; trans = nat-trans }
